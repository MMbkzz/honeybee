<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackstech.honeybee.server.system.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="com.stackstech.honeybee.server.system.entity.AccountEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_password" jdbcType="VARCHAR" property="accountPassword" />
    <result column="account_role" jdbcType="BIGINT" property="accountRole" />
    <result column="account_realname" jdbcType="VARCHAR" property="accountRealname" />
    <result column="account_gender" jdbcType="INTEGER" property="accountGender" />
    <result column="account_email" jdbcType="VARCHAR" property="accountEmail" />
    <result column="account_phone" jdbcType="VARCHAR" property="accountPhone" />
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="owner" jdbcType="BIGINT" property="owner" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
  </resultMap>
  <sql id="Base_Column_List">
    `id`, `account_name`, `account_password`, `account_role`, `account_realname`, `account_gender`, 
    `account_email`, `account_phone`, `status`, `owner`, `updatetime`, `createtime`, 
    `desc`
  </sql>

  <sql id="Query_Column_List">
    `id`, `account_name`, `account_role`, `status`, `owner`, `updatetime`, `desc`
  </sql>

  <select id="selectByAccountAndPassowrd" resultMap="BaseResultMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List" /> from hb_account
    where `status` != -1 and `account_name` = #{account} and `account_password` = #{password}
  </select>

  <select id="selectByParameter" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Query_Column_List" />
    from hb_account where `status` != -1
    <if test="status != null">
      and `status` = #{status}
    </if>
    <if test="accountRole != null">
      and `account_role` = #{accountRole}
    </if>
    <if test="keywords != null">
      and (`account_name` like #{keywords} or `account_realname` like #{keywords} or `desc` like #{keywords})
    </if>
    <if test="order != null">
      order by ${order}
    </if>
    <if test="pageStart != null and pageSize != null and pageStart gt -1">
      limit ${pageStart}, ${pageSize}
    </if>
  </select>

  <select id="selectTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    select count(1) from hb_account where `status` != -1
    <if test="status != null">
      and `status` = #{status}
    </if>
    <if test="accountRole != null">
      and `account_role` = #{accountRole}
    </if>
    <if test="keywords != null">
      and (`account_name` like #{keywords} or `account_realname` like #{keywords} or `desc` like #{keywords})
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hb_account
    where `id` = #{id,jdbcType=BIGINT} and `status` != -1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    update hb_account set `status` = -1 ,`updatetime` = NOW() where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.stackstech.honeybee.server.system.entity.AccountEntity" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
    insert into hb_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="accountName != null">
        `account_name`,
      </if>
      <if test="accountPassword != null">
        `account_password`,
      </if>
      <if test="accountRole != null">
        `account_role`,
      </if>
      <if test="accountRealname != null">
        `account_realname`,
      </if>
      <if test="accountGender != null">
        `account_gender`,
      </if>
      <if test="accountEmail != null">
        `account_email`,
      </if>
      <if test="accountPhone != null">
        `account_phone`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="owner != null">
        `owner`,
      </if>
      <if test="updatetime != null">
        `updatetime`,
      </if>
      <if test="createtime != null">
        `createtime`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null">
        #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountRole != null">
        #{accountRole,jdbcType=BIGINT},
      </if>
      <if test="accountRealname != null">
        #{accountRealname,jdbcType=VARCHAR},
      </if>
      <if test="accountGender != null">
        #{accountGender,jdbcType=INTEGER},
      </if>
      <if test="accountEmail != null">
        #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="accountPhone != null">
        #{accountPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stackstech.honeybee.server.system.entity.AccountEntity">
    update hb_account
    <set>
      <if test="accountName != null">
        `account_name` = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null">
        `account_password` = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountRole != null">
        `account_role` = #{accountRole,jdbcType=BIGINT},
      </if>
      <if test="accountRealname != null">
        `account_realname` = #{accountRealname,jdbcType=VARCHAR},
      </if>
      <if test="accountGender != null">
        `account_gender` = #{accountGender,jdbcType=INTEGER},
      </if>
      <if test="accountEmail != null">
        `account_email` = #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="accountPhone != null">
        `account_phone` = #{accountPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        `owner` = #{owner,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        `updatetime` = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>