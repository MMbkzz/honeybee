<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stackstech.dcp.server.auth.dao.AuthLoginInfoMapper">

    <sql id="Base_Column_List">
        id,user_id,login_name,user_agent,login_ip,access_token,token_expire,role_names,login_date
    </sql>
    <delete id="deleteByUserId" parameterType="java.lang.Long">
        DELETE FROM auth_login_info WHERE user_id = #{userId}
    </delete>

    <resultMap id="BaseResultMap" type="com.stackstech.dcp.server.auth.model.LoginInfo">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="user_agent" property="userAgent" jdbcType="VARCHAR"/>
        <result column="login_ip" property="loginIp" jdbcType="VARCHAR"/>
        <result column="access_token" property="accessToken" jdbcType="VARCHAR"/>
        <result column="token_expire" property="tokenExpire"/>
        <result column="role_names" property="roleNames" jdbcType="VARCHAR"/>
        <result column="login_date" property="loginDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insertLoginInfo" parameterType="com.stackstech.dcp.server.auth.model.LoginInfo">
        INSERT INTO auth_login_info
        (id,user_id,login_ip,user_agent,login_date,access_token,token_expire,role_names,login_name)
        VALUES
        (#{id},#{userId},#{loginIp},#{userAgent},#{loginDate},#{accessToken},#{tokenExpire},#{roleNames},#{loginName})
    </insert>

    <select id="getLoginInfo" resultMap="BaseResultMap"
            parameterType="com.stackstech.dcp.server.auth.model.vo.LoginInfoVo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        auth_login_info
        <where>
            <if test="loginIp != null and loginIp != ''">
                login_ip = #{loginIp}
            </if>
            <if test="loginName != null and loginName != ''">
                AND login_name like CONCAT('%','${loginName}','%' )
            </if>
            <if test="roleName != null and roleName != ''">
                AND role_names like CONCAT('%','${roleName}','%' )
            </if>
            <if test="startTime != null and startTime != ''">
                AND login_date &gt;#{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND login_date &lt;#{endTime}
            </if>
            <if test="userId != null and userId != ''">
                AND user_id = #{userId}
            </if>
        </where>
        order by login_date desc
    </select>
</mapper>