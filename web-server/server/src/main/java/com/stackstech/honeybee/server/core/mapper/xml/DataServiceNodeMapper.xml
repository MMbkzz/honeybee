<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackstech.honeybee.server.core.mapper.DataServiceNodeMapper">
  <resultMap id="BaseResultMap" type="com.stackstech.honeybee.server.core.entity.DataServiceNodeEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_node_name" jdbcType="VARCHAR" property="serviceNodeName" />
    <result column="service_node_code" jdbcType="VARCHAR" property="serviceNodeCode" />
    <result column="service_node_ip" jdbcType="VARCHAR" property="serviceNodeIp" />
    <result column="service_node_port" jdbcType="VARCHAR" property="serviceNodePort" />
    <result column="service_node_endpoint" jdbcType="VARCHAR" property="serviceNodeEndpoint" />
    <result column="service_node_status" jdbcType="VARCHAR" property="serviceNodeStatus" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
  </resultMap>
  <sql id="Base_Column_List">
    id, service_node_name, service_node_code, service_node_ip, service_node_port, service_node_endpoint, 
    service_node_status, updatetime, createtime, desc
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hb_data_service_node
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hb_data_service_node
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.stackstech.honeybee.server.core.entity.DataServiceNodeEntity">
    insert into hb_data_service_node (id, service_node_name, service_node_code, 
      service_node_ip, service_node_port, service_node_endpoint, 
      service_node_status, updatetime, createtime, 
      desc)
    values (#{id,jdbcType=BIGINT}, #{serviceNodeName,jdbcType=VARCHAR}, #{serviceNodeCode,jdbcType=VARCHAR}, 
      #{serviceNodeIp,jdbcType=VARCHAR}, #{serviceNodePort,jdbcType=VARCHAR}, #{serviceNodeEndpoint,jdbcType=VARCHAR}, 
      #{serviceNodeStatus,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{desc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stackstech.honeybee.server.core.entity.DataServiceNodeEntity">
    insert into hb_data_service_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serviceNodeName != null">
        service_node_name,
      </if>
      <if test="serviceNodeCode != null">
        service_node_code,
      </if>
      <if test="serviceNodeIp != null">
        service_node_ip,
      </if>
      <if test="serviceNodePort != null">
        service_node_port,
      </if>
      <if test="serviceNodeEndpoint != null">
        service_node_endpoint,
      </if>
      <if test="serviceNodeStatus != null">
        service_node_status,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="desc != null">
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="serviceNodeName != null">
        #{serviceNodeName,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeCode != null">
        #{serviceNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeIp != null">
        #{serviceNodeIp,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodePort != null">
        #{serviceNodePort,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeEndpoint != null">
        #{serviceNodeEndpoint,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeStatus != null">
        #{serviceNodeStatus,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stackstech.honeybee.server.core.entity.DataServiceNodeEntity">
    update hb_data_service_node
    <set>
      <if test="serviceNodeName != null">
        service_node_name = #{serviceNodeName,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeCode != null">
        service_node_code = #{serviceNodeCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeIp != null">
        service_node_ip = #{serviceNodeIp,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodePort != null">
        service_node_port = #{serviceNodePort,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeEndpoint != null">
        service_node_endpoint = #{serviceNodeEndpoint,jdbcType=VARCHAR},
      </if>
      <if test="serviceNodeStatus != null">
        service_node_status = #{serviceNodeStatus,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stackstech.honeybee.server.core.entity.DataServiceNodeEntity">
    update hb_data_service_node
    set service_node_name = #{serviceNodeName,jdbcType=VARCHAR},
      service_node_code = #{serviceNodeCode,jdbcType=VARCHAR},
      service_node_ip = #{serviceNodeIp,jdbcType=VARCHAR},
      service_node_port = #{serviceNodePort,jdbcType=VARCHAR},
      service_node_endpoint = #{serviceNodeEndpoint,jdbcType=VARCHAR},
      service_node_status = #{serviceNodeStatus,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>