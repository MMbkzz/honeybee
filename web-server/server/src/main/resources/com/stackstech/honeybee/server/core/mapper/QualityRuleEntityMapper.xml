<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackstech.honeybee.server.core.mapper.QualityRuleEntityMapper">
  <resultMap id="BaseResultMap" type="com.stackstech.honeybee.server.core.entity.QualityRuleEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
    <result column="rule_code" jdbcType="VARCHAR" property="ruleCode" />
    <result column="rule_type" jdbcType="VARCHAR" property="ruleType" />
    <result column="rule_config_yaml" jdbcType="VARCHAR" property="ruleConfigYaml" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="owner" jdbcType="BIGINT" property="owner" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
  </resultMap>
  <sql id="Base_Column_List">
    id, rule_name, rule_code, rule_type, rule_config_yaml, job_id, status, owner, updatetime, 
    createtime, desc
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hb_quality_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hb_quality_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.stackstech.honeybee.server.core.entity.QualityRuleEntity">
    insert into hb_quality_rule (id, rule_name, rule_code, 
      rule_type, rule_config_yaml, job_id, 
      status, owner, updatetime, 
      createtime, desc)
    values (#{id,jdbcType=BIGINT}, #{ruleName,jdbcType=VARCHAR}, #{ruleCode,jdbcType=VARCHAR}, 
      #{ruleType,jdbcType=VARCHAR}, #{ruleConfigYaml,jdbcType=VARCHAR}, #{jobId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{owner,jdbcType=BIGINT}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP}, #{desc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stackstech.honeybee.server.core.entity.QualityRuleEntity">
    insert into hb_quality_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="ruleCode != null">
        rule_code,
      </if>
      <if test="ruleType != null">
        rule_type,
      </if>
      <if test="ruleConfigYaml != null">
        rule_config_yaml,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="desc != null">
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="ruleCode != null">
        #{ruleCode,jdbcType=VARCHAR},
      </if>
      <if test="ruleType != null">
        #{ruleType,jdbcType=VARCHAR},
      </if>
      <if test="ruleConfigYaml != null">
        #{ruleConfigYaml,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stackstech.honeybee.server.core.entity.QualityRuleEntity">
    update hb_quality_rule
    <set>
      <if test="ruleName != null">
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="ruleCode != null">
        rule_code = #{ruleCode,jdbcType=VARCHAR},
      </if>
      <if test="ruleType != null">
        rule_type = #{ruleType,jdbcType=VARCHAR},
      </if>
      <if test="ruleConfigYaml != null">
        rule_config_yaml = #{ruleConfigYaml,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stackstech.honeybee.server.core.entity.QualityRuleEntity">
    update hb_quality_rule
    set rule_name = #{ruleName,jdbcType=VARCHAR},
      rule_code = #{ruleCode,jdbcType=VARCHAR},
      rule_type = #{ruleType,jdbcType=VARCHAR},
      rule_config_yaml = #{ruleConfigYaml,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      owner = #{owner,jdbcType=BIGINT},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      desc = #{desc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>